---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cfm.cloudera.com/v1alpha1",
          "kind": "Nifi",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "cfm-operator",
              "app.kubernetes.io/instance": "nifi-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "nifi",
              "app.kubernetes.io/part-of": "cfm-operator"
            },
            "name": "nifi-sample"
          },
          "spec": {
            "hostName": "nifi.apps-crc.testing",
            "image": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-nifi-k8s",
              "tag": "2.8.0-b94-nifi_1.25.0.2.3.13.0-36"
            },
            "replicas": 1,
            "stateManagement": {
              "clusterProvider": {
                "class": "org.apache.nifi.kubernetes.state.provider.KubernetesConfigMapStateProvider",
                "id": "kubernetes-provider"
              }
            },
            "tiniImage": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-tini",
              "tag": "2.8.0-b94"
            },
            "uiConnection": {
              "routeConfig": {
                "tls": {
                  "termination": "passthrough"
                }
              },
              "type": "Route"
            }
          }
        },
        {
          "apiVersion": "cfm.cloudera.com/v1alpha1",
          "kind": "NifiRegistry",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "cfm-operator",
              "app.kubernetes.io/instance": "nifiregistry-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "nifiregistry",
              "app.kubernetes.io/part-of": "cfm-operator"
            },
            "name": "nifiregistry-sample"
          },
          "spec": {
            "hostName": "registry.apps-crc.testing",
            "image": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-nifiregistry-k8s",
              "tag": "2.8.0-b94-nifi_1.25.0.2.3.13.0-36"
            },
            "replicas": 1,
            "tiniImage": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-tini",
              "tag": "2.8.0-b94"
            },
            "uiConnection": {
              "routeConfig": {
                "tls": {
                  "termination": "passthrough"
                }
              },
              "type": "Route"
            }
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: AI/Machine Learning,Big Data
    com.redhat.openshift.versions: v4.10
    containerImage: container.repository.cloudera.com/cloudera/cfm-operator@sha256:3fa121e36860a6cfc73cd5974b529ee2764066fb77e860799bd8896f09fbe649
    createdAt: "2024-08-02T16:36:59Z"
    description: Cloudera Flow Manager Operator deploys and operates Apache NiFi
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    operators.openshift.io/valid-subscription: A valid CFM Operator license is required.
      Contact a Cloudera account team to learn more.
    operators.operatorframework.io/builder: operator-sdk-v1.29.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4-alpha
    support: Cloudera
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  name: cfm-operator.v2.8.0-b94
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: NifiRegistry is the Schema for the nifiregistries API.
        displayName: Nifi Registry
        kind: NifiRegistry
        name: nifiregistries.cfm.cloudera.com
        version: v1alpha1
      - description: Nifi is the Schema for the nifis API.
        displayName: Nifi
        kind: Nifi
        name: nifis.cfm.cloudera.com
        version: v1alpha1
  description: |-
    Creates and manages Cloudera Flow Management NiFi clusters and NiFi Registries.

    Installation requires a docker-registry Secret 'cloudera-container-repository-credentials' containing valid credentials to container.repository.cloudera.com and a generic Secret 'cfm-operator-license' containing a valid license obtained from Cloudera.
  displayName: Cloudera Flow Management Operator
  icon:
    - base64data: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iMTkycHgiIGhlaWdodD0iMTkycHgiIHZpZXdCb3g9IjAgMCAxOTIgMTkyIiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgogICAgPHRpdGxlPmljLWNsb3VkZXJhLWxnPC90aXRsZT4KICAgIDxnIGlkPSJTeW1ib2xzIiBzdHJva2U9Im5vbmUiIHN0cm9rZS13aWR0aD0iMSIgZmlsbD0ibm9uZSIgZmlsbC1ydWxlPSJldmVub2RkIj4KICAgICAgICA8ZyBpZD0ic2VydmljZS1sb2dvcy9jbG91ZGVyYS9jbG91ZGVyYS1sYXJnZSIgZmlsbD0iI0Y5NjcwMiI+CiAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNTQuNjE1ODk0LDE0MS41NDI3MzcgTDE1Ny41ODM4MDMsMTQ0LjQ5NjQxMyBMMTE4LjI1OTUzLDE4My42NTUwOTEgQzExNi4xOTQ4MDYsMTgzLjg3MDM5OCAxMTQuMDgzODczLDE4My45MjY4MzcgMTExLjk3NzE0LDE4NCBMMTExLjk3NzE0LDE4NCBMMTU0LjYxNTg5NCwxNDEuNTQyNzM3IFogTTE0Ny42NDc5MjMsMTM0LjYwNDIxMSBMMTUwLjYxNzkzMywxMzcuNTU5OTc3IEwxMDQuMDc0NDc4LDE4My45MDUzMDcgQzEwMi4yMjE4OTcsMTgzLjgwNDk3IDEwMC4zNzM1MTgsMTgzLjcwMjU0MiA5OC41NTI0NDQsMTgzLjQ4OTMyNiBMOTguNTUyNDQ0LDE4My40ODkzMjYgTDE0Ny42NDc5MjMsMTM0LjYwNDIxMSBaIE0xNDAuNjc5OTUzLDEyNy42NjU2ODUgTDE0My42NDk5NjIsMTMwLjYyMTQ1MiBMOTEuNjEzODc5NSwxODIuNDM1MTU4IEM4OS45OTg2NDc5LDE4Mi4xMTUzMzMgODguNDMxNzI2MiwxODEuNjcyMTc3IDg2Ljg1MDEwMTUsMTgxLjI2NjY0OCBMODYuODUwMTAxNSwxODEuMjY2NjQ4IEwxNDAuNjc5OTUzLDEyNy42NjU2ODUgWiBNMTYxLjU4NDkxNCwxNDguNDgxNDcxIEwxNjQuNTUyODI0LDE1MS40MzcyMzggTDEzNS45MTc2NDUsMTc5Ljk0OTcyMiBDMTMzLjI3MzIwMiwxODAuNzkyMTM2IDEzMC41NzQxNDgsMTgxLjQ5ODY3NyAxMjcuODI4ODg0LDE4Mi4wOTIzMzkgTDEyNy44Mjg4ODQsMTgyLjA5MjMzOSBMMTYxLjU4NDkxNCwxNDguNDgxNDcxIFogTTEyMi43Mzc0MzksMTM3LjU2NTQxMiBMODAuNjU5NTAwNiwxNzkuNDY0NTUgQzc5LjE5MzM5OTYsMTc4Ljk3MTIyNiA3Ny43NDIwMDE3LDE3OC40NDY1NDYgNzYuMzExNjA4LDE3Ny44ODAwNTkgTDc2LjMxMTYwOCwxNzcuODgwMDU5IEwxMTUuMDIwNDU1LDEzOS4zMzgwMzYgQzExNy42NzMyOTksMTM4Ljk3MDEzMyAxMjAuMjU0NzI5LDEzOC4zODQ4MzMgMTIyLjczNzQzOSwxMzcuNTY1NDEyIEwxMjIuNzM3NDM5LDEzNy41NjU0MTIgWiBNMTAxLjMyMjQ5MywxMzkuMDk5MzE3IEMxMDMuMDcyMTUyLDEzOS40MDQ1MDkgMTA0Ljg1NTQxOCwxMzkuNTk0NzMyIDEwNi42NjgwOSwxMzkuNjg4Nzk4IEwxMDYuNjY4MDksMTM5LjY4ODc5OCBMNzAuNzczODIxMSwxNzUuNDI5NzQxIEM2OS40MzU4NDY0LDE3NC43OTAwOTEgNjguMDY2MzY1MywxNzQuMjA4OTcyIDY2Ljc2NjE5ODQsMTczLjUwNjYxMSBMNjYuNzY2MTk4NCwxNzMuNTA2NjExIFogTTE2OC41NTMwOTUsMTU1LjQxODUzNCBMMTcxLjUsMTU4LjM1MzM5NiBDMTY1LjEyNzI5MiwxNjQuNjk5NzI0IDE1Ny43NTI2NzgsMTcwLjAyODA0NiAxNDkuNjgyODIxLDE3NC4yMDg3NjMgTDE0OS42ODI4MjEsMTc0LjIwODc2MyBMMTY4LjU1MzA5NSwxNTUuNDE4NTM0IFogTTkwLjcwMTQ1MjIsMTM1LjgwMDUyMyBDOTIuMDgxNDM1NSwxMzYuNDMxODExIDkzLjQ5NTAyNTcsMTM2Ljk5NjIwOCA5NC45NDY0MjM3LDEzNy40ODUzNTEgTDk0Ljk0NjQyMzcsMTM3LjQ4NTM1MSBMNjEuNzkxMTE3LDE3MC40OTYyODcgQzYwLjU4MTI2ODYsMTY5LjczMzMwNiA1OS4zNzk4MjIsMTY4Ljk2ODIzNSA1OC4yMDk4ODE4LDE2OC4xNTA5MDUgTDU4LjIwOTg4MTgsMTY4LjE1MDkwNSBaIE04Mi4wMzUwNzMsMTMwLjU1MjA1MiBDODMuMTU0NjAyOSwxMzEuNDIxNjQxIDg0LjMxNjE0MTMsMTMyLjIzNjg4IDg1LjUxOTY4ODQsMTMyLjk5NTY4IEw4NS41MTk2ODg0LDEzMi45OTU2OCBMNTMuNjM1MTQyNiwxNjQuNzQxOTQ5IEM1Mi41Mzg3MTc1LDE2My44NjgxNzkgNTEuNDk0ODAzMiwxNjIuOTMzNzg5IDUwLjQ0MjQ4NzEsMTYyLjAwNzc2IEw1MC40NDI0ODcxLDE2Mi4wMDc3NiBaIE03MC4wMTA5NDQ1LDExNi4yMTU1NCBDNzIuMDk0NTcyMywxMjAuMTkxNDAxIDc0Ljc0OTUxNzMsMTIzLjgzMDcxNCA3Ny45MDY0NjU0LDEyNi45NzQ2MTMgTDc3LjkwNjQ2NTQsMTI2Ljk3NDYxMyBMNDYuMzk5OTk3MiwxNTguMzQ2NzA3IEM0My4yNzI0NTUxLDE1NS4yMjk5ODMgNDAuNDUzNjc2NSwxNTEuODIwNjA5IDM3LjgxOTczNTcsMTQ4LjI2NyBMMzcuODE5NzM1NywxNDguMjY3IFogTTY1LjExMzU3OTEsOTQuNTM5MTUzMiBDNjUuMDk0Njc1Miw5NS4wNTMzODEzIDY1LjAzNTg2MzEsOTUuNTU3MTU3NiA2NS4wMzU4NjMxLDk2LjA3NTU2NjQgQzY1LjAzNTg2MzEsMTAxLjIwMTEyNSA2NS45NzI2NTU0LDEwNi4xMDMwMTQgNjcuNjA2NzkwOSwxMTAuNjc2NzE4IEw2Ny42MDY3OTA5LDExMC42NzY3MTggTDM0LjU1MDIwNDUsMTQzLjU4OTQwNiBDMzIuMDY5NTk1MiwxMzkuNzQ5NDE4IDI5Ljg2NDE0MjQsMTM1LjcxNTAyNyAyNy45OTg5NTk1LDEzMS40OTI1MDQgTDI3Ljk5ODk1OTUsMTMxLjQ5MjUwNCBaIE0xMDguOTUzMzU5LDggQzEzMy4zNzkyNzQsOCAxNTUuNDkyNjE0LDE3Ljg2MDIxOTIgMTcxLjUsMzMuNzk3MTA5NCBMMTcxLjUsMzMuNzk3MTA5NCBMMTM5Ljk5MzUzMiw2NS4xNjkyMDM4IEMxMzIuMDQxMjk5LDU3LjI1MDkyNzMgMTIxLjA2MDI0NSw1Mi4zNDQ4NTY4IDEwOC45NTMzNTksNTIuMzQ0ODU2OCBDOTYuODQ0MzczMyw1Mi4zNDQ4NTY4IDg1Ljg2NTQxOTQsNTcuMjUwOTI3MyA3Ny45MTMxODY4LDY1LjE2OTIwMzggQzcyLjQyMjY1OTYsNzAuNjM1NDkwMiA2OC40MjM0Mzg2LDc3LjU2MjkzNyA2Ni40NDQ4MzI0LDg1LjI4MjYyOTUgTDY2LjQ0NDgzMjQsODUuMjgyNjI5NSBMMjUuNzY3ODgxNSwxMjUuNzgzMzE4IEMyNC4wNTgxMzA1LDEyMS4wNDAyOTUgMjIuNzQ1MzYxLDExNi4xMjM3NzMgMjEuODY5NDgxMiwxMTEuMDQyMTEyIEwyMS44Njk0ODEyLDExMS4wNDIxMTIgTDcyLjkyNjc2MzEsNjAuMjA0NjAzMyBMNjguOTQ0MzQ1NSw1Ni4yNDEyODQzIEwyMC45MDMyODI4LDEwNC4wNzI4NTggQzIwLjY2NTkzNDEsMTAxLjQzNjkxNyAyMC41LDk4Ljc3NTg5MSAyMC41LDk2LjA3NTE0ODQgQzIwLjUsOTIuMzUwMTMwMiAyMC44MDY2NjMsODguNzA0NTQ1NyAyMS4yNTYxNTUyLDg1LjEwMDc2ODMgTDIxLjI1NjE1NTIsODUuMTAwNzY4MyBMNTkuNTkzMjI1OCw0Ni45MjY2NDg2IEw1NS42MTA4MDgyLDQyLjk2MTIzOTMgTDIzLjA1ODMyNTIsNzUuMzc2NDIyNCBDMjYuOTMzNjIwOCw1OS4zODEwMDIyIDM1LjEwMDA5NzQsNDUuMDU1Nzc4MSA0Ni40MDY3MTg2LDMzLjc5NzEwOTQgQzYyLjQxNDEwNDksMTcuODYwMjE5MiA4NC41Mjc0NDQ3LDggMTA4Ljk1MzM1OSw4IFoiIGlkPSJjbG91ZGVyYSI+PC9wYXRoPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+"
      mediatype: "image/svg+xml"
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - list
            - apiGroups:
                - ""
              resources:
                - persistentvolumeclaims
              verbs:
                - delete
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - delete
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - pods/exec
              verbs:
                - create
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - serviceaccounts
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
                - route.openshift.io
              resources:
                - routes/custom-host
              verbs:
                - create
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - list
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - cert-manager.io
              resources:
                - certificates
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifiregistries
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifiregistries/finalizers
              verbs:
                - update
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifiregistries/status
              verbs:
                - update
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifis
              verbs:
                - get
                - list
                - update
                - watch
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifis/finalizers
              verbs:
                - update
            - apiGroups:
                - cfm.cloudera.com
              resources:
                - nifis/status
              verbs:
                - update
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
            - apiGroups:
                - extensions
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - list
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
          serviceAccountName: cfm-operator-controller-manager
      deployments:
        - label:
            app.kubernetes.io/component: manager
            app.kubernetes.io/created-by: cfm-operator
            app.kubernetes.io/instance: controller-manager
            app.kubernetes.io/managed-by: kustomize
            app.kubernetes.io/name: deployment
            app.kubernetes.io/part-of: cfm-operator
            control-plane: controller-manager
          name: cfm-operator-controller-manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: controller-manager
            strategy: {}
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  control-plane: controller-manager
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                                - arm64
                                - ppc64le
                                - s390x
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                containers:
                  - args:
                      - --health-probe-bind-address=:8081
                      - --metrics-bind-address=127.0.0.1:8080
                      - --leader-elect
                    command:
                      - /manager
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                    image: container.repository.cloudera.com/cloudera/cfm-operator@sha256:3fa121e36860a6cfc73cd5974b529ee2764066fb77e860799bd8896f09fbe649
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    ports:
                      - containerPort: 9443
                        name: webhook-server
                        protocol: TCP
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 100m
                        memory: 100Mi
                      requests:
                        cpu: 100m
                        memory: 100Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                        - ALL
                    volumeMounts:
                      - mountPath: /license
                        name: license
                        readOnly: true
                      - mountPath: /tmp/k8s-webhook-server/serving-certs
                        name: cert
                        readOnly: true
                  - args:
                      - --secure-listen-address=0.0.0.0:8443
                      - --upstream=http://127.0.0.1:8080/
                      - --logtostderr=true
                      - --v=10
                    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86af06fb3b6c17b22be47118b0a8c797fa7fdd3c00dbe99a2d2a593ca8fc3d63
                    name: kube-rbac-proxy
                    ports:
                      - containerPort: 8443
                        name: https
                        protocol: TCP
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 5m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                imagePullSecrets:
                  - name: cloudera-container-repository-credentials
                securityContext:
                  runAsNonRoot: true
                serviceAccountName: cfm-operator-controller-manager
                terminationGracePeriodSeconds: 10
                volumes:
                  - name: license
                    secret:
                      defaultMode: 420
                      secretName: cfm-operator-license
                  - name: cert
                    secret:
                      defaultMode: 420
                      secretName: webhook-server-cert
      permissions:
        - rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - coordination.k8s.io
            resources:
              - leases
            verbs:
              - get
              - list
              - watch
              - create
              - update
              - patch
              - delete
          - apiGroups:
              - ""
            resources:
              - events
            verbs:
              - create
              - patch
          serviceAccountName: cfm-operator-controller-manager
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - nifi
    - nifiregistry
    - cloudera
    - cfm
  labels:
    operated-by: cfm-operator
  links:
    - name: CFM Operator
      url: https://docs.cloudera.com/cfm-operator
  maintainers:
    - email: support@cloudera.com
      name: Cloudera
  maturity: stable
  provider:
    name: Cloudera
    url: https://cloudera.com
  relatedImages:
    - name: cfm-operator
      image: container.repository.cloudera.com/cloudera/cfm-operator@sha256:3fa121e36860a6cfc73cd5974b529ee2764066fb77e860799bd8896f09fbe649
    - name: kube-rbac-proxy
      image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86af06fb3b6c17b22be47118b0a8c797fa7fdd3c00dbe99a2d2a593ca8fc3d63
    - name: cfm-nifi-k8s
      image: container.repository.cloudera.com/cloudera/cfm-nifi-k8s@sha256:ad08bcbc56a2dfe4437e03d58a9c78878049b75982eacb5a7499af5d5e6b6256
    - name: cfm-nifiregistry-k8s
      image: container.repository.cloudera.com/cloudera/cfm-nifiregistry-k8s@sha256:9179dee70429b4ee2cd6d15043de1abd4319d579bd2b3beb587ad144bdb83dcc
    - name: cfm-tini
      image: container.repository.cloudera.com/cloudera/cfm-tini@sha256:73f8650a1a41378ba5037c1163327f5ac4e35a19d69d825acba03c3804baed92
  version: 2.8.0-b94
  webhookdefinitions:
    - admissionReviewVersions:
        - v1
      containerPort: 443
      conversionCRDs:
        - nifiregistries.cfm.cloudera.com
        - nifis.cfm.cloudera.com
      deploymentName: cfm-operator-controller-manager
      generateName: cnifiregistriesnifis.kb.io
      sideEffects: None
      targetPort: 9443
      type: ConversionWebhook
      webhookPath: /convert
    - admissionReviewVersions:
        - v1
        - v1beta1
      containerPort: 443
      deploymentName: cfm-operator-controller-manager
      failurePolicy: Fail
      generateName: mnifi.kb.io
      rules:
        - apiGroups:
            - cfm.cloudera.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - nifis
      sideEffects: None
      targetPort: 9443
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-cfm-cloudera-com-v1alpha1-nifi
    - admissionReviewVersions:
        - v1
        - v1beta1
      containerPort: 443
      deploymentName: cfm-operator-controller-manager
      failurePolicy: Fail
      generateName: mnifiregistry.kb.io
      rules:
        - apiGroups:
            - cfm.cloudera.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - nifiregistries
      sideEffects: None
      targetPort: 9443
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-cfm-cloudera-com-v1alpha1-nifiregistry
    - admissionReviewVersions:
        - v1
        - v1beta1
      containerPort: 443
      deploymentName: cfm-operator-controller-manager
      failurePolicy: Fail
      generateName: vnifi.kb.io
      rules:
        - apiGroups:
            - cfm.cloudera.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - nifis
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-cfm-cloudera-com-v1alpha1-nifi
    - admissionReviewVersions:
        - v1
        - v1beta1
      containerPort: 443
      deploymentName: cfm-operator-controller-manager
      failurePolicy: Fail
      generateName: vnifiregistry.kb.io
      rules:
        - apiGroups:
            - cfm.cloudera.com
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - nifiregistries
      sideEffects: None
      targetPort: 9443
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-cfm-cloudera-com-v1alpha1-nifiregistry
