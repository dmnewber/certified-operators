apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cfm.cloudera.com/v1alpha1",
          "kind": "Nifi",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "cfm-operator",
              "app.kubernetes.io/instance": "nifi-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "nifi",
              "app.kubernetes.io/part-of": "cfm-operator"
            },
            "name": "nifi-sample"
          },
          "spec": {
            "hostName": "nifi.apps-crc.testing",
            "image": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-nifi-k8s",
              "tag": "2.8.0-b94-nifi_1.25.0.2.3.13.0-36"
            },
            "replicas": 1,
            "stateManagement": {
              "clusterProvider": {
                "class": "org.apache.nifi.kubernetes.state.provider.KubernetesConfigMapStateProvider",
                "id": "kubernetes-provider"
              }
            },
            "tiniImage": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-tini",
              "tag": "2.8.0-b94"
            },
            "uiConnection": {
              "routeConfig": {
                "tls": {
                  "termination": "passthrough"
                }
              },
              "type": "Route"
            }
          }
        },
        {
          "apiVersion": "cfm.cloudera.com/v1alpha1",
          "kind": "NifiRegistry",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "cfm-operator",
              "app.kubernetes.io/instance": "nifiregistry-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "nifiregistry",
              "app.kubernetes.io/part-of": "cfm-operator"
            },
            "name": "nifiregistry-sample"
          },
          "spec": {
            "hostName": "registry.apps-crc.testing",
            "image": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-nifiregistry-k8s",
              "tag": "2.8.0-b94-nifi_1.25.0.2.3.13.0-36"
            },
            "replicas": 1,
            "tiniImage": {
              "repository": "container.repository.cloudera.com/cloudera/cfm-tini",
              "tag": "2.8.0-b94"
            },
            "uiConnection": {
              "routeConfig": {
                "tls": {
                  "termination": "passthrough"
                }
              },
              "type": "Route"
            }
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: AI/Machine Learning,Big Data,Streaming & Messaging
    com.redhat.openshift.versions: v4.10-v4.15
    containerImage: container.repository.cloudera.com/cloudera/cfm-operator:2.8.0-b94
    createdAt: "2024-08-02T16:36:59Z"
    description: Cloudera Flow Manager Operator deploys and operates Apache NiFi
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    operators.openshift.io/valid-subscription: A valid CFM Operator license is required.
      Contact a Cloudera account team to learn more.
    operators.operatorframework.io/builder: operator-sdk-v1.29.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4-alpha
    support: Cloudera
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  name: cfm-operator.v0.0.0-dev
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: NifiRegistry is the Schema for the nifiregistries API.
      displayName: Nifi Registry
      kind: NifiRegistry
      name: nifiregistries.cfm.cloudera.com
      version: v1alpha1
    - description: Nifi is the Schema for the nifis API.
      displayName: Nifi
      kind: Nifi
      name: nifis.cfm.cloudera.com
      version: v1alpha1
  description: Creates and manages NiFi clusters.
  displayName: CFM Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          - route.openshift.io
          resources:
          - routes/custom-host
          verbs:
          - create
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifiregistries
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifiregistries/finalizers
          verbs:
          - update
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifiregistries/status
          verbs:
          - update
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifis
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifis/finalizers
          verbs:
          - update
        - apiGroups:
          - cfm.cloudera.com
          resources:
          - nifis/status
          verbs:
          - update
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - extensions
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - list
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: cfm-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: cfm-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: cfm-operator
          control-plane: controller-manager
        name: cfm-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: docker-sandbox.infra.cloudera.com/mnewberry/cfm-operator:0.0.0-dev
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: cfm-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: cfm-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - nifi
  - nifiregistry
  - cloudera
  - cfm
  labels:
    operated-by: cfm-operator
  links:
  - name: CFM Operator
    url: https://docs.cloudera.com/cfm-operator
  maintainers:
  - email: support@cloudera.com
    name: Cloudera
  maturity: stable
  provider:
    name: Cloudera
    url: https://cloudera.com
  version: 0.0.0-dev
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    conversionCRDs:
    - nifiregistries.cfm.cloudera.com
    - nifis.cfm.cloudera.com
    deploymentName: cfm-operator-controller-manager
    generateName: cnifiregistriesnifis.kb.io
    sideEffects: None
    targetPort: 9443
    type: ConversionWebhook
    webhookPath: /convert
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: cfm-operator-controller-manager
    failurePolicy: Fail
    generateName: mnifi.kb.io
    rules:
    - apiGroups:
      - cfm.cloudera.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - nifis
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-cfm-cloudera-com-v1alpha1-nifi
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: cfm-operator-controller-manager
    failurePolicy: Fail
    generateName: mnifiregistry.kb.io
    rules:
    - apiGroups:
      - cfm.cloudera.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - nifiregistries
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-cfm-cloudera-com-v1alpha1-nifiregistry
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: cfm-operator-controller-manager
    failurePolicy: Fail
    generateName: vnifi.kb.io
    rules:
    - apiGroups:
      - cfm.cloudera.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - nifis
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-cfm-cloudera-com-v1alpha1-nifi
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: cfm-operator-controller-manager
    failurePolicy: Fail
    generateName: vnifiregistry.kb.io
    rules:
    - apiGroups:
      - cfm.cloudera.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - nifiregistries
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-cfm-cloudera-com-v1alpha1-nifiregistry
